<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Detection.proto

namespace Proto\Detection;

/**
 * Protobuf type <code>proto.Detection.Attack</code>
 */
class Attack
{
    /**
     * Generated from protobuf enum <code>AUTOMATION_CRAWLER = 0;</code>
     */
    const AUTOMATION_CRAWLER = 0;
    /**
     * Generated from protobuf enum <code>AUTOMATION_SCRIPTING = 1;</code>
     */
    const AUTOMATION_SCRIPTING = 1;
    /**
     * Generated from protobuf enum <code>AUTOMATION_SECURITY_SCANNER = 2;</code>
     */
    const AUTOMATION_SECURITY_SCANNER = 2;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_EMPTY_HEADER_UA = 10;</code>
     */
    const PROTOCOL_VIOLATION_EMPTY_HEADER_UA = 10;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_EVASION = 11;</code>
     */
    const PROTOCOL_VIOLATION_EVASION = 11;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_INVALID_HREQ = 12;</code>
     */
    const PROTOCOL_VIOLATION_INVALID_HREQ = 12;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_INVALID_REQ = 13;</code>
     */
    const PROTOCOL_VIOLATION_INVALID_REQ = 13;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_IP_HOST = 14;</code>
     */
    const PROTOCOL_VIOLATION_IP_HOST = 14;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_MISSING_HEADER_ACCEPT = 15;</code>
     */
    const PROTOCOL_VIOLATION_MISSING_HEADER_ACCEPT = 15;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_MISSING_HEADER_HOST = 16;</code>
     */
    const PROTOCOL_VIOLATION_MISSING_HEADER_HOST = 16;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_MISSING_HEADER_UA = 17;</code>
     */
    const PROTOCOL_VIOLATION_MISSING_HEADER_UA = 17;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_CONTENT_TYPE = 18;</code>
     */
    const PROTOCOL_VIOLATION_CONTENT_TYPE = 18;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_CONTENT_TYPE_CHARSET = 19;</code>
     */
    const PROTOCOL_VIOLATION_CONTENT_TYPE_CHARSET = 19;
    /**
     * Generated from protobuf enum <code>PROTOCOL_VIOLATION_MISSING_HEADER = 20;</code>
     */
    const PROTOCOL_VIOLATION_MISSING_HEADER = 20;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_COMMAND_INJECTION = 30;</code>
     */
    const WEB_ATTACK_COMMAND_INJECTION = 30;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_DIR_TRAVERSAL = 31;</code>
     */
    const WEB_ATTACK_DIR_TRAVERSAL = 31;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_FILE_INJECTION = 32;</code>
     */
    const WEB_ATTACK_FILE_INJECTION = 32;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_PHP_INJECTION = 33;</code>
     */
    const WEB_ATTACK_PHP_INJECTION = 33;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_REQUEST_SMUGGLING = 34;</code>
     */
    const WEB_ATTACK_REQUEST_SMUGGLING = 34;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_RFI = 35;</code>
     */
    const WEB_ATTACK_RFI = 35;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_SESSION_FIXATION = 36;</code>
     */
    const WEB_ATTACK_SESSION_FIXATION = 36;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_SQL_INJECTION = 37;</code>
     */
    const WEB_ATTACK_SQL_INJECTION = 37;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_XSS = 38;</code>
     */
    const WEB_ATTACK_XSS = 38;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_CSRF = 39;</code>
     */
    const WEB_ATTACK_CSRF = 39;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_HTTP_PARAMETER_POLLUTION = 40;</code>
     */
    const WEB_ATTACK_HTTP_PARAMETER_POLLUTION = 40;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_ABNORMAL_ESCAPE = 41;</code>
     */
    const WEB_ATTACK_ABNORMAL_ESCAPE = 41;
    /**
     * Generated from protobuf enum <code>WEB_ATTACK_MALICIOUS_FILE = 42;</code>
     */
    const WEB_ATTACK_MALICIOUS_FILE = 42;
    /**
     * Generated from protobuf enum <code>BEHAVIOR_PREDICTABLE_RESOURCE_LOCATION = 50;</code>
     */
    const BEHAVIOR_PREDICTABLE_RESOURCE_LOCATION = 50;
    /**
     * Generated from protobuf enum <code>BEHAVIOR_INSUFFICIENT_AUTHENTICATION = 51;</code>
     */
    const BEHAVIOR_INSUFFICIENT_AUTHENTICATION = 51;
    /**
     * Generated from protobuf enum <code>POLICY_CONTENT_TYPE_NOT_ALLOWED = 70;</code>
     */
    const POLICY_CONTENT_TYPE_NOT_ALLOWED = 70;
    /**
     * Generated from protobuf enum <code>POLICY_ENCODING_NOT_ALLOWED = 71;</code>
     */
    const POLICY_ENCODING_NOT_ALLOWED = 71;
    /**
     * Generated from protobuf enum <code>POLICY_EXT_RESTRICTED = 72;</code>
     */
    const POLICY_EXT_RESTRICTED = 72;
    /**
     * Generated from protobuf enum <code>POLICY_HEADER_RESTRICTED = 73;</code>
     */
    const POLICY_HEADER_RESTRICTED = 73;
    /**
     * Generated from protobuf enum <code>POLICY_IP_HOST = 74;</code>
     */
    const POLICY_IP_HOST = 74;
    /**
     * Generated from protobuf enum <code>POLICY_METHOD_NOT_ALLOWED = 75;</code>
     */
    const POLICY_METHOD_NOT_ALLOWED = 75;
    /**
     * Generated from protobuf enum <code>POLICY_PROTOCOL_NOT_ALLOWED = 76;</code>
     */
    const POLICY_PROTOCOL_NOT_ALLOWED = 76;
    /**
     * Generated from protobuf enum <code>POLICY_SIZE_LIMIT = 77;</code>
     */
    const POLICY_SIZE_LIMIT = 77;
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Attack::class, \Proto\Detection_Attack::class);

